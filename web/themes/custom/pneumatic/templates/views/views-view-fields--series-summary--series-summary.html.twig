{#
/**
 * @file
 * Theme override to display all the fields in a row.
 *
 * Available variables:
 * - view: The view in use.
 * - fields: A list of fields, each one contains:
 *   - content: The output of the field.
 *   - raw: The raw data for the field, if it exists. This is NOT output safe.
 *   - class: The safe class ID to use.
 *   - handler: The Views field handler controlling this field.
 *   - inline: Whether or not the field should be inline.
 *   - wrapper_element: An HTML element for a wrapper.
 *   - wrapper_attributes: List of attributes for wrapper element.
 *   - separator: An optional separator that may appear before a field.
 *   - label: The field's label text.
 *   - label_element: An HTML element for a label wrapper.
 *   - label_attributes: List of attributes for label wrapper.
 *   - label_suffix: Colon after the label.
 *   - element_type: An HTML element for the field content.
 *   - element_attributes: List of attributes for HTML element for field content.
 *   - has_label_colon: A boolean indicating whether to display a colon after
 *     the label.
 *   - element_type: An HTML element for the field content.
 *   - element_attributes: List of attributes for HTML element for field content.
 * - row: The raw result from the query, with all data it fetched.
 *
 * @see template_preprocess_views_view_fields()
 */
#}
{% set count = fields.nid.content %}
<div class="row align-center small-collapse large-uncollapse">
  <div class="small-12 medium-12 large-8 columns">
    <div class="series-teaser">
      <div class="row align-middle">
        <div class="small-12 large-7 columns">
          {{ fields.field_series_graphic.content }}
        </div>
        <div class="small-12 large-5 columns">
          <h4>{{ fields.name.content }}</h4>
          <p>{{ fields.nid.content }}</p>
          <p>{{ fields.description__value.content }}</p>
          <p>{{ fields.view_taxonomy_term.content }}</p>
        </div>
      </div>
    </div>
  </div>
</div>
